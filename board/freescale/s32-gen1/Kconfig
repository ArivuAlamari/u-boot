if TARGET_S32G274AEMU || TARGET_S32R45EMU

config TARGET_TYPE_S32GEN1_EMULATOR
	bool
	default y
	help
	  Target Type S32 Gen1 Emulator

endif

if TARGET_S32G274ASIM || TARGET_S32R45SIM

config TARGET_TYPE_S32GEN1_SIMULATOR
	bool
	default y
	help
	  Target Type S32 Gen1 Simulator

endif

config SYS_DATA_BASE
	hex "Data Base"
	default 0x34000000
	help
	  U-boot data base address (normally SRAM base address)

config SYS_TEXT_BASE
	hex
	default 0x340a0000

config SYS_MEM_SIZE
	hex "RAM Memory Size"
	default 0x00800000
	help
	  U-boot SRAM size (8 MB for Gen1, 4 MB for older architectures)

if S32_GEN1

config SYS_BOARD
	string
	default "s32-gen1"

config SYS_CONFIG_NAME
	string
	default "s32g274a" if NXP_S32G2XX
	default "s32r45" if NXP_S32R45

config SYS_ERRATUM_ERR050543
	bool "Workaround for NXP Erratum ERR050543"
	default y if S32_LPDDR4 || NXP_S32G2XX || NXP_S32R45
	help
	  This option enables a workaround for NXP Erratum ERR050543
	  (This erratum applies for LPDDR4 memories only. The memories require
	  a periodic refresh to maintain memory contents and the refresh rate
	  has to vary over temperature and S32G contains an hardware-based
	  automatism to carry this dynamic adjustment out. This automatism however
	  does not work under all conditions.)

# Size of SRAM area used by U-boot during the first boot stage. This includes
# all of the sections in the System.map, plus the runtime stack which
# is constructed starting from this offset downwards. Note this has nothing
# to do with the memory layout after relocation to DDR, which includes
# heap and other zones reservations.
config UBOOT_SRAM_FOOTPRINT
	hex
	default 0x200000

config DTB_SRAM_ADDR
	hex "SRAM address at which the dtb will be found"
	default 0x34090000

choice
	prompt "Select boot flow configuration"
	default S32_STANDALONE_BOOT_FLOW
	help
	  In secure boot and power management aware scenarios, there would be a
	  Trusted Firmware running at EL3 just before U-Boot, while the latter
	  runs at EL2 or EL1. Running in the non-secure world prevents U-Boot
	  from configuring certain registers, in particular secure GICv3.
	  While the secure boot feature and the Trusted Firmware are still in
	  development, this choice will enable the U-Boot and firmware developer
	  to switch between TF-A and standalone boot flows. The default
	  is standalone, to allow for backward compatibility with the existing,
	  stable configurations.

	config S32_STANDALONE_BOOT_FLOW
		bool "Standalone boot flow"
		help
		  U-Boot runs at EL3 as the first component in the boot flow.
		  This boot flow does not accommodate an ARM Trusted Firmware
		  (TF-A) for this platform.

	config S32_ATF_BOOT_FLOW
		bool "Boot flow with TF-A"
		help
		  U-Boot is started by the ARM Trusted Firmware (TF-A) and runs
		  in the non-secure world.
endchoice

endif

config S32GEN1_HWCONFIG
	string "S32GEN1 HWConfig definition"
	depends on S32_GEN1 && (PCIE_S32GEN1 || FSL_PFENG)
	default "pcie0:mode=rc,clock=ext;pcie1:mode=sgmii,clock=ext,fmhz=125,xpcs_mode=2G5" if (PCIE_S32GEN1 && FSL_PFENG) &&  TARGET_S32G274ARDB
	default "pcie0:mode=rc,clock=ext;pcie1:mode=sgmii,clock=ext,fmhz=125,xpcs_mode=0" if (PCIE_S32GEN1 && FSL_PFENG) &&  TARGET_S32G274AEVB
	default "pcie0:mode=ep,clock=ext;pcie1:mode=sgmii,clock=ext,fmhz=125,xpcs_mode=0" if (PCIE_S32GEN1 && FSL_PFENG) &&  TARGET_S32G274ABLUEBOX3
	default "pcie0:mode=sgmii;pcie1:mode=sgmii" if (!PCIE_S32GEN1 && FSL_PFENG)
	default "pcie0:mode=rc,clock=ext;pcie1:mode=ep,clock=int" if (PCIE_S32GEN1 && !FSL_PFENG)
	default ""
	help
	  The configuration for the PCIe controllers, stored in
	  the variable 'hwconfig'
	  It configures the mode (rc, ep, sgmii) or the clock type
	  (internal or external)
	  It is also possible to configure combo mode either ep&sgmii or
	  rc&sgmii, with these configurations lane0 is PCIe and lane1
	  is connected to mac depending on 'xpcs_mode'.
	  SGMII uses additional configurations 'fmhz' and 'xpcs_mode'.
	  Config 'xpcs_mode' is used to specifically configure each line in
	  SGMII mode. The following are valid options: '2G5', 'both', '0' and
	  '1'. Mode '2G5' uses lane0 in 2.5G mode and leaves lane1 disabled.
	  Mode 'both' configures both lanes for 1G operation so 2 macs can
	  be connected. Mode '0' is used to configure only XPCS0, this can be
	  used in 'sgmii' mode (one lane emac 1G other lane disabled) or
	  in 'rc&sgmii'/'ep&sgmii' (one lane PCIeX1 other lane SGMII 1G).
	  Same configuration is used for '1', which corresponds to XPCS1.
	  Config 'fmhz' specifies frequency used as reference. In case of
	  2.5G mode it is required to set this 125, if used in SGMII/PCIe
	  combo mode 'fmhz' has to be 100 (PCIe ignores this and always
	  uses 100). In case the SerDes is configured as SGMII and not in
	  2.5G mode either 100 or 125 can be used in 'fmhz'.
	  Available 'xpcs_mode' are depedent on platform:
	  	s32g274a - supports '0','1','both' and '2G5'
	  	s32r45   - supports '0' and '2G5'
