// SPDX-License-Identifier: BSD-3-Clause
/*
 * Copyright 2019, 2021 NXP
 */

#define A53_CLUSTER_GPR			0x4007C400ul
#define A53_CLUSTER_GPR_GPR(x)		(A53_CLUSTER_GPR + ((x) * 0x4))

#define GPR00_CA53_0_CORE0_AA64NAA32_MASK	BIT(0)
#define GPR00_CA53_0_CORE1_AA64NAA32_MASK	BIT(1)
#define GPR00_CA53_1_CORE0_AA64NAA32_MASK	BIT(2)
#define GPR00_CA53_1_CORE1_AA64NAA32_MASK	BIT(3)
#define GPR00_CA53_0_BROADCASTCACHEMAINT_MASK	BIT(4)
#define GPR00_CA53_0_BROADCASTINNER_MASK	BIT(5)
#define GPR00_CA53_0_BROADCASTOUTER_MASK	BIT(6)
#define GPR00_CA53_1_BROADCASTCACHEMAINT_MASK	BIT(7)
#define GPR00_CA53_1_BROADCASTINNER_MASK	BIT(8)
#define GPR00_CA53_1_BROADCASTOUTER_MASK	BIT(9)
#define GPR00_CA53_0_CORE0_CFGEND_MASK		BIT(10)
#define GPR00_CA53_0_CORE1_CFGEND_MASK		BIT(11)
#define GPR00_CA53_0_CORE0_CFGTE_MASK		BIT(12)
#define GPR00_CA53_0_CORE1_CFGTE_MASK		BIT(13)
#define GPR00_CA53_1_CORE0_CFGEND_MASK		BIT(14)
#define GPR00_CA53_1_CORE1_CFGEND_MASK		BIT(15)
#define GPR00_CA53_1_CORE0_CFGTE_MASK		BIT(16)
#define GPR00_CA53_1_CORE1_CFGTE_MASK		BIT(17)
#define GPR00_CA53_0_CORE0_VINITHI_MASK		BIT(18)
#define GPR00_CA53_0_CORE1_VINITHI_MASK		BIT(19)
#define GPR00_CA53_1_CORE0_VINITHI_MASK		BIT(20)
#define GPR00_CA53_1_CORE1_VINITHI_MASK		BIT(21)
#define GPR00_CA53_COUNTER_CLK_DIV_VAL_MASK	(BIT(24) | BIT(25) | BIT(26))
#define GPR00_CA53_0_CORE0_AA64NAA32_VALUE(x)		(((x) & 0x1) << 0)
#define GPR00_CA53_0_CORE1_AA64NAA32_VALUE(x)		(((x) & 0x1) << 1)
#define GPR00_CA53_1_CORE0_AA64NAA32_VALUE(x)		(((x) & 0x1) << 2)
#define GPR00_CA53_1_CORE1_AA64NAA32_VALUE(x)		(((x) & 0x1) << 3)
#define GPR00_CA53_0_BROADCASTCACHEMAINT_VALUE(x)	(((x) & 0x1) << 4)
#define GPR00_CA53_0_BROADCASTINNER_VALUE(x)		(((x) & 0x1) << 5)
#define GPR00_CA53_0_BROADCASTOUTER_VALUE(x)		(((x) & 0x1) << 6)
#define GPR00_CA53_1_BROADCASTCACHEMAINT_VALUE(x)	(((x) & 0x1) << 7)
#define GPR00_CA53_1_BROADCASTINNER_VALUE(x)		(((x) & 0x1) << 8)
#define GPR00_CA53_1_BROADCASTOUTER_VALUE(x)		(((x) & 0x1) << 9)
#define GPR00_CA53_0_CORE0_CFGEND_VALUE(x)		(((x) & 0x1) << 10)
#define GPR00_CA53_0_CORE1_CFGEND_VALUE(x)		(((x) & 0x1) << 11)
#define GPR00_CA53_0_CORE0_CFGTE_VALUE(x)		(((x) & 0x1) << 12)
#define GPR00_CA53_0_CORE1_CFGTE_VALUE(x)		(((x) & 0x1) << 13)
#define GPR00_CA53_1_CORE0_CFGEND_VALUE(x)		(((x) & 0x1) << 14)
#define GPR00_CA53_1_CORE1_CFGEND_VALUE(x)		(((x) & 0x1) << 15)
#define GPR00_CA53_1_CORE0_CFGTE_VALUE(x)		(((x) & 0x1) << 16)
#define GPR00_CA53_1_CORE1_CFGTE_VALUE(x)		(((x) & 0x1) << 17)
#define GPR00_CA53_0_CORE0_VINITHI_VALUE(x)		(((x) & 0x1) << 18)
#define GPR00_CA53_0_CORE1_VINITHI_VALUE(x)		(((x) & 0x1) << 19)
#define GPR00_CA53_1_CORE0_VINITHI_VALUE(x)		(((x) & 0x1) << 20)
#define GPR00_CA53_1_CORE1_VINITHI_VALUE(x)		(((x) & 0x1) << 21)
#define GPR00_CA53_COUNTER_CLK_DIV_VAL_VALUE(x)		(((x) & 0x7) << 24)
#define GPR00_CA53_COUNTER_CLK_DIV_VAL_SHIFT	(24)

#define GPR01_WFE_EVT_CA53_CLUSTER0_MASK	BIT(0)
#define GPR01_WFE_EVT_CA53_CLUSTER1_MASK	BIT(1)
#define GPR01_CLUSTER0_CG_EN_MASK		BIT(8)
#define GPR01_CLUSTER1_CG_EN_MASK		BIT(9)
#define GPR01_CA53_0_CORE0_CP15SDISABLE_MASK	BIT(24)
#define GPR01_CA53_0_CORE1_CP15SDISABLE_MASK	BIT(25)
#define GPR01_CA53_1_CORE0_CP15SDISABLE_MASK	BIT(26)
#define GPR01_CA53_1_CORE1_CP15SDISABLE_MASK	BIT(27)
#define GPR01_WFE_EVT_CA53_CLUSTER0_VALUE(x)		(((x) & 0x1) << 0)
#define GPR01_WFE_EVT_CA53_CLUSTER1_VALUE(x)		(((x) & 0x1) << 1)
#define GPR01_CLUSTER0_CG_EN_VALUE(x)			(((x) & 0x1) << 8)
#define GPR01_CLUSTER1_CG_EN_VALUE(x)			(((x) & 0x1) << 9)
#define GPR01_CA53_0_CORE0_CP15SDISABLE_VALUE(x)	(((x) & 0x1) << 24)
#define GPR01_CA53_0_CORE1_CP15SDISABLE_VALUE(x)	(((x) & 0x1) << 25)
#define GPR01_CA53_1_CORE0_CP15SDISABLE_VALUE(x)	(((x) & 0x1) << 26)
#define GPR01_CA53_1_CORE1_CP15SDISABLE_VALUE(x)	(((x) & 0x1) << 27)

#define GPR06_CA53_LOCKSTEP_EN_MASK		BIT(0)
#define GPR06_GIC500_LOCKSTEP_EN_MASK		(BIT(1) | BIT(2))
#define GPR06_CA53_LOCKSTEP_EN_VALUE(x)		(((x) & 0x1) << 0)
#define GPR06_GIC500_LOCKSTEP_EN_VALUE(x)	(((x) & 0x3) << 1)

#define GPR07_CA53_0_CLUSTERIDAFF1_MASK		(0xff << 0)
#define GPR07_CA53_0_CLUSTERIDAFF2_MASK		(0xff << 8)
#define GPR07_CA53_1_CLUSTERIDAFF1_MASK		(0xff << 16)
#define GPR07_CA53_1_CLUSTERIDAFF2_MASK		(0xff << 24)
#define GPR07_CA53_0_CLUSTERIDAFF1_VALUE(x)	(((x) & 0xff) << 0)
#define GPR07_CA53_0_CLUSTERIDAFF2_VALUE(x)	(((x) & 0xff) << 8)
#define GPR07_CA53_1_CLUSTERIDAFF1_VALUE(x)	(((x) & 0xff) << 16)
#define GPR07_CA53_1_CLUSTERIDAFF2_VALUE(x)	(((x) & 0xff) << 24)

#define GPR08_CA53_0_CORE0_WARM_RESET_STATUS_MASK	BIT(0)
#define GPR08_CA53_0_CORE1_WARM_RESET_STATUS_MASK	BIT(1)
#define GPR08_CA53_1_CORE0_WARM_RESET_STATUS_MASK	BIT(2)
#define GPR08_CA53_1_CORE1_WARM_RESET_STATUS_MASK	BIT(3)
#define GPR08_CLUSTER0_STANDBYWFIL2_STATUS_MASK		BIT(8)
#define GPR08_CLUSTER1_STANDBYWFIL2_STATUS_MASK		BIT(9)
#define GPR08_CA53_0_CORE0_STANDBYWFE_STATUS_MASK	BIT(16)
#define GPR08_CA53_0_CORE1_STANDBYWFE_STATUS_MASK	BIT(17)
#define GPR08_CA53_1_CORE0_STANDBYWFE_STATUS_MASK	BIT(18)
#define GPR08_CA53_1_CORE1_STANDBYWFE_STATUS_MASK	BIT(19)
#define GPR08_CA53_0_CORE0_STANDBYWFI_STATUS_MASK	BIT(24)
#define GPR08_CA53_0_CORE1_STANDBYWFI_STATUS_MASK	BIT(25)
#define GPR08_CA53_1_CORE0_STANDBYWFI_STATUS_MASK	BIT(26)
#define GPR08_CA53_1_CORE1_STANDBYWFI_STATUS_MASK	BIT(27)

#define GPR09_CA53_0_CORE0_RVBARADDR_39_32_MASK		(0xff << 0)
#define GPR09_CA53_0_CORE1_RVBARADDR_39_32_MASK		(0xff << 8)
#define GPR09_CA53_1_CORE0_RVBARADDR_39_32_MASK		(0xff << 16)
#define GPR09_CA53_1_CORE1_RVBARADDR_39_32_MASK		(0xff << 24)
#define GPR09_CA53_0_CORE0_RVBARADDR_39_32_VALUE(x)	(((x) & 0xff) << 0)
#define GPR09_CA53_0_CORE1_RVBARADDR_39_32_VALUE(x)	(((x) & 0xff) << 8)
#define GPR09_CA53_1_CORE0_RVBARADDR_39_32_VALUE(x)	(((x) & 0xff) << 16)
#define GPR09_CA53_1_CORE1_RVBARADDR_39_32_VALUE(x)	(((x) & 0xff) << 24)

#define GPR10_CA53_0_CORE0_CPUMERRSR_HIGH_BITS_MASK	(0xffffffff)
#define GPR10_CA53_0_CORE0_CPUMERRSR_HIGH_BITS_VALUE(x)	(((x) & 0xffffffff) << 0)

#define GPR11_CA53_0_CORE0_CPUMERRSR_LOW_BITS_MASK	(0xffffffff)
#define GPR11_CA53_0_CORE0_CPUMERRSR_LOW_BITS_VALUE(x)	(((x) & 0xffffffff) << 0)

#define GPR12_CA53_0_CORE1_CPUMERRSR_HIGH_BITS_MASK	(0xffffffff)
#define GPR12_CA53_0_CORE1_CPUMERRSR_HIGH_BITS_VALUE(x)	(((x) & 0xffffffff) << 0)

#define GPR13_CA53_0_CORE1_CPUMERRSR_LOW_BITS_MASK	(0xffffffff)
#define GPR13_CA53_0_CORE1_CPUMERRSR_LOW_BITS_VALUE(x)	(((x) & 0xffffffff) << 0)

#define GPR14_CA53_1_CORE0_CPUMERRSR_HIGH_BITS_MASK	(0xffffffff)
#define GPR14_CA53_1_CORE0_CPUMERRSR_HIGH_BITS_VALUE(x)	(((x) & 0xffffffff) << 0)

#define GPR15_CA53_1_CORE0_CPUMERRSR_LOW_BITS_MASK	(0xffffffff)
#define GPR15_CA53_1_CORE0_CPUMERRSR_LOW_BITS_VALUE(x)	(((x) & 0xffffffff) << 0)

#define GPR16_CA53_1_CORE1_CPUMERRSR_HIGH_BITS_MASK	(0xffffffff)
#define GPR16_CA53_1_CORE1_CPUMERRSR_HIGH_BITS_VALUE(x)	(((x) & 0xffffffff) << 0)

#define GPR17_CA53_1_CORE1_CPUMERRSR_LOW_BITS_MASK	(0xffffffff)
#define GPR17_CA53_1_CORE1_CPUMERRSR_LOW_BITS_VALUE(x)	(((x) & 0xffffffff) << 0)

#define GPR18_CA53_0_L2MERRSR_HIGH_BITS_MASK		(0xffffffff)
#define GPR18_CA53_0_L2MERRSR_HIGH_BITS_VALUE(x)	(((x) & 0xffffffff) << 0)

#define GPR19_CA53_0_L2MERRSR_LOW_BITS_MASK		(0xffffffff)
#define GPR19_CA53_0_L2MERRSR_LOW_BITS_VALUE(x)		(((x) & 0xffffffff) << 0)

#define GPR20_CA53_1_L2MERRSR_HIGH_BITS_MASK		(0xffffffff)
#define GPR20_CA53_1_L2MERRSR_HIGH_BITS_VALUE(x)	(((x) & 0xffffffff) << 0)

#define GPR21_CA53_1_L2MERRSR_LOW_BITS_MASK		(0xffffffff)
#define GPR21_CA53_1_L2MERRSR_LOW_BITS_VALUE(x)		(((x) & 0xffffffff) << 0)

static inline bool is_a53_lockstep_enabled(void)
{
	return readl(A53_CLUSTER_GPR_GPR(6)) & GPR06_CA53_LOCKSTEP_EN_MASK;
}
